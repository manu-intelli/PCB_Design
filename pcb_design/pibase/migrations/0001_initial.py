# Generated by Django 5.0.10 on 2025-06-07 07:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PiBaseComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('format', models.JSONField(blank=True, default=dict, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, help_text="Icon class for the component, e.g., 'CircuitBoard'", max_length=100, null=True)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'PiBaseComponent',
            },
        ),
        migrations.CreateModel(
            name='PiBaseFieldCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('input_type', models.PositiveSmallIntegerField(choices=[(1, 'Dropdown'), (2, 'Radio Button')])),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'PiBaseFieldCategory',
            },
        ),
        migrations.CreateModel(
            name='PiBaseImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_type', models.CharField(help_text='e.g. schematic, layout', max_length=50)),
                ('image_file', models.FileField(blank=True, null=True, upload_to='schematics/')),
                ('cookies', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'PiBaseImage',
            },
        ),
        migrations.CreateModel(
            name='PiBaseStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.PositiveSmallIntegerField(choices=[(1, 'Pending'), (2, 'Complete'), (3, 'Close'), (4, 'Delete')], unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'PiBaseStatus',
            },
        ),
        migrations.CreateModel(
            name='PiBaseFieldOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='pibase.pibasefieldcategory')),
            ],
            options={
                'db_table': 'PiBaseFieldOption',
            },
        ),
        migrations.CreateModel(
            name='PiBaseRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('op_no', models.CharField(max_length=20, verbose_name='OP Number')),
                ('opu_no', models.CharField(max_length=20, verbose_name='OPU Number')),
                ('edu_no', models.CharField(max_length=20, verbose_name='EDU Number')),
                ('model_name', models.CharField(max_length=100)),
                ('similar_model_layout', models.TextField(blank=True, null=True)),
                ('revision_number', models.CharField(max_length=20)),
                ('impedance_selection', models.JSONField(default=dict, verbose_name='Impedance Selection')),
                ('interfaces_details', models.JSONField(blank=True, default=dict, null=True, verbose_name='Interfaces Details')),
                ('case_style_data', models.JSONField(default=dict, verbose_name='Case Style Data')),
                ('can_details', models.JSONField(blank=True, default=dict, null=True)),
                ('pcb_details', models.JSONField(blank=True, default=dict, null=True)),
                ('chip_aircoil_details', models.JSONField(blank=True, default=dict, null=True)),
                ('chip_inductor_details', models.JSONField(blank=True, default=dict, null=True)),
                ('chip_capacitor_details', models.JSONField(blank=True, default=dict, null=True)),
                ('chip_resistor_details', models.JSONField(blank=True, default=dict, null=True)),
                ('transformer_details', models.JSONField(blank=True, default=dict, null=True)),
                ('shield_details', models.JSONField(blank=True, default=dict, null=True)),
                ('finger_details', models.JSONField(blank=True, default=dict, null=True)),
                ('copper_flaps_details', models.JSONField(blank=True, default=dict, null=True)),
                ('resonator_details', models.JSONField(blank=True, default=dict, null=True)),
                ('ltcc_details', models.JSONField(blank=True, default=dict, null=True)),
                ('special_requirements', models.TextField(blank=True, null=True, verbose_name='Special Requirements')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bottom_solder_mask', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_bottom_solder_mask', to='pibase.pibasefieldoption', verbose_name='Bottom Solder Mask')),
                ('components', models.ManyToManyField(blank=True, related_name='devices', to='pibase.pibasecomponent')),
                ('cover_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_cover_type', to='pibase.pibasefieldoption', verbose_name='Cover Type')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pi_base_records', to=settings.AUTH_USER_MODEL)),
                ('design_rule_violation_accepted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_design_rule_violation_accepted', to='pibase.pibasefieldoption', verbose_name='Design Rule Violation')),
                ('half_moon_requirement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_half_moon_requirement', to='pibase.pibasefieldoption', verbose_name='Half Moon Requirement')),
                ('model_family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_model_family', to='pibase.pibasefieldoption', verbose_name='Model Family')),
                ('schematic', models.ForeignKey(blank=True, help_text='Schematic image reference', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schematic_records', to='pibase.pibaseimage')),
                ('signal_launch_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_signal_launch_type', to='pibase.pibasefieldoption', verbose_name='Signal Launch Type')),
                ('technology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_technology', to='pibase.pibasefieldoption', verbose_name='Technology')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pi_base_records_updated', to=settings.AUTH_USER_MODEL)),
                ('via_holes_on_signal_pads', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_via_holes_on_signal_pads', to='pibase.pibasefieldoption', verbose_name='Via Holes Requirement')),
                ('status', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_models', to='pibase.pibasestatus')),
            ],
            options={
                'verbose_name': 'PiBaseRecord',
                'verbose_name_plural': 'PiBaseRecords',
                'db_table': 'PiBaseRecord',
                'ordering': ['-created_at'],
            },
        ),
    ]
